/**	@file	ZWindow.h
*	@brief	窗体类定义
*	@author	kaoru(SHIINA_KAORU@OURLOOK.COM)
*	@date	2020-12-10
*/

#pragma once
#include "ZControl.h"
#include "ZPanel.h"
#include "main.h"

/** @brief 窗体类型枚举
*/
enum DLLAPI WindowType {
	/**@brief 无边框*/
	None,
	/**@brief 固定的单行边框*/
	FixedSingle,
	/**@brief 固定的三维边框*/
	Fixed3D,
	/**@brief 固定的对话框样式的粗边框*/
	FixedDialog,
	/**@brief 可调整大小的边*/
	Sizable,
	/**@brief 不可调整大小的工具窗口边框*/
	FixedToolWindow,
	/**@brief 可调整大小的工具窗口边框*/
	SizableToolWindow,
};

/**	@brief ZWindow 类定义
*/
class DLLAPI ZWindow : public ZControl, public ZPanel
{
private:
	/** @brief 不要调用该函数
	*/
	HANDLE Init(HANDLE handle);

	/**
	 * 释放资源
	 *
	 */
	~ZWindow();

public:
	/** @brief		实例化 ZWindow 对象
	*	@param text 窗体标题
	*/
	ZWindow(ZString text, WindowType type = Sizable);

	/**
	 * 实例化 ZWindow 对象
	 *
	 * \param text	窗体标题
	 * \param x		x坐标
	 * \param y		y坐标
	 * \param w		宽
	 * \param h		高
	 * \param type	窗体风格
	 */
	ZWindow(ZString text, int x, int y, int w, int h, WindowType type = Sizable);

	/**	@brief 设置窗体风格
	*	\deprecated
	*/
	void SetWindowType(WindowType type);

	/** @brief 注册并创建窗体
	*/
	void Create();

	/**
	 * 展示窗体
	 */
	void Run();

	/**
	 * 向窗体添加控件
	 *
	 * \param con
	 */
	void AddControl(ZControl* con);

	/**
	 * 从窗体移除控件
	 *
	 * \param id
	 */
	void RemoveControl(DWORDLONG id);
};
